---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: ironicconductors.ironic.openstack.org
spec:
  group: ironic.openstack.org
  names:
    kind: IronicConductor
    listKind: IronicConductorList
    plural: ironicconductors
    singular: ironicconductor
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: NetworkAttachments
      jsonPath: .spec.networkAttachments
      name: NetworkAttachments
      type: string
    - description: Status
      jsonPath: .status.conditions[0].status
      name: Status
      type: string
    - description: Message
      jsonPath: .status.conditions[0].message
      name: Message
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IronicConductor is the Schema for the ironicconductors Conductor
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IronicConductorSpec defines the desired state of IronicConductor
            properties:
              conductorGroup:
                description: ConductorGroup - Ironic Conductor conductor group.
                type: string
              containerImage:
                description: ContainerImage - Ironic Conductor Container Image URL
                  (will be set to environmental default if empty)
                type: string
              customServiceConfig:
                default: '# add your customization here'
                description: CustomServiceConfig - customize the service config using
                  this parameter to change service defaults, or overwrite rendered
                  information using raw OpenStack config format. The content gets
                  added to to /etc/<service>/<service>.conf.d directory as custom.conf
                  file.
                type: string
              databaseHostname:
                description: DatabaseHostname - Ironic Database Hostname
                type: string
              debug:
                description: Debug - enable debug for different deploy stages. If
                  an init container is used, it runs and the actual action pod gets
                  started with sleep infinity
                properties:
                  dbSync:
                    default: false
                    description: DBSync enable debug
                    type: boolean
                  service:
                    default: false
                    description: Service enable debug
                    type: boolean
                type: object
              defaultConfigOverwrite:
                additionalProperties:
                  type: string
                description: 'ConfigOverwrite - interface to overwrite default config
                  files like e.g. policy.json. But can also be used to add additional
                  files. Those get added to the service config dir in /etc/<service>
                  . TODO: -> implement'
                type: object
              dhcpRanges:
                description: DHCPRanges - List of DHCP ranges to use for provisioning
                items:
                  description: DHCPRange to define address range for DHCP requestes
                  properties:
                    cidr:
                      description: Cidr - IP address prefix (CIDR) representing an
                        IP network.
                      type: string
                    end:
                      description: End - End of DHCP range
                      type: string
                    gateway:
                      description: Gateway - IP address for the router
                      type: string
                    mtu:
                      description: MTU - Maximum Transmission Unit
                      type: integer
                    name:
                      description: Name - Name of the DHCPRange (used for tagging
                        in dnsmasq)
                      type: string
                    podIndex:
                      description: PodIndex - Maps the DHCPRange to a specific statefulset
                        pod index
                      type: integer
                    start:
                      description: Start - Start of DHCP range
                      type: string
                  required:
                  - cidr
                  - end
                  - start
                  type: object
                type: array
              keystoneVars:
                additionalProperties:
                  type: string
                description: keystoneVars - Internally used map of Keystone API endpoints
                type: object
              networkAttachments:
                description: NetworkAttachments is a list of NetworkAttachment resource
                  names to expose the services to the given network
                items:
                  type: string
                type: array
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector to target subset of worker nodes running
                  this service. Setting here overrides any global NodeSelector settings
                  within the Ironic CR
                type: object
              passwordSelectors:
                default:
                  database: IronicDatabasePassword
                  service: IronicPassword
                description: PasswordSelectors - Selectors to identify the DB and
                  ServiceUser password and TransportURL from the Secret
                properties:
                  database:
                    default: IronicDatabasePassword
                    description: 'Database - Selector to get the ironic Database user
                      password from the Secret TODO: not used, need change in mariadb-operator'
                    type: string
                  service:
                    default: IronicPassword
                    description: Database - Selector to get the ironic service password
                      from the Secret
                    type: string
                type: object
              provisionNetwork:
                description: ProvisionNetwork - Additional network to attach to expose
                  boot DHCP, TFTP, HTTP services.
                type: string
              pxeContainerImage:
                description: PxeContainerImage - Ironic DHCP/TFTP/HTTP Container Image
                  URL (will be set to environmental default if empty)
                type: string
              replicas:
                default: 1
                description: Replicas - Ironic Conductor Replicas
                format: int32
                type: integer
              resources:
                description: Resources - Compute Resources required by this service
                  (Limits/Requests). https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              rpcTransport:
                default: json-rpc
                description: RPC transport type - Which RPC transport implementation
                  to use between conductor and API services. 'oslo' to use oslo.messaging
                  transport or 'json-rpc' to use JSON RPC transport. NOTE -> ironic-inspector
                  requires oslo.messaging transport when not in standalone mode.
                type: string
              secret:
                description: Secret containing OpenStack password information for
                  IronicDatabasePassword, AdminPassword
                type: string
              serviceUser:
                default: ironic
                description: ServiceUser - optional username used for this service
                  to register in ironic
                type: string
              standalone:
                default: false
                description: Whether to deploy a standalone Ironic.
                type: boolean
              storageClass:
                default: ""
                description: StorageClass
                type: string
              storageRequest:
                description: StorageRequest
                type: string
              transportURLSecret:
                description: TransportURLSecret - Secret containing RabbitMQ transportURL
                type: string
            required:
            - containerImage
            - pxeContainerImage
            - storageClass
            - storageRequest
            type: object
          status:
            description: IronicConductorStatus defines the observed state of IronicConductor
            properties:
              conditions:
                description: Conditions
                items:
                  description: Condition defines an observation of a API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase.
                      type: string
                    severity:
                      description: Severity provides a classification of Reason code,
                        so the current situation is immediately understandable and
                        could act accordingly. It is meant for situations where Status=False
                        and it should be indicated if it is just informational, warning
                        (next reconciliation might fix it) or an error (e.g. DB create
                        issue and no actions to automatically resolve the issue can/should
                        be done). For conditions where Status=Unknown or Status=True
                        the Severity should be SeverityNone.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              hash:
                additionalProperties:
                  type: string
                description: Map of hashes to track e.g. job status
                type: object
              networkAttachments:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: NetworkAttachments status of the deployment pods
                type: object
              readyCount:
                description: ReadyCount of ironic Conductor instances
                format: int32
                type: integer
              serviceIDs:
                additionalProperties:
                  type: string
                description: ServiceIDs
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
